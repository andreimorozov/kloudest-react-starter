!function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var n={};t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="/public/assets/",t(t.s=3)}([function(e,t,n){"use strict";function r(e){return"Hello, "+e.firstName+" "+e.lastName}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t,n){this.firstName=e,this.middleInitial=t,this.lastName=n,this.fullName=e+" "+t+" "+n}return e}();t.Student=o,t.greeter=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),o=n(0),i=n(0);r.login("admin","hren"),console.log("App loaded");var u=new o.Student("Jane","M.","User");document.body.innerHTML=i.greeter(u),document.writeln("<br />cheers!")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(e,t){"admin"===e&&"chlen"===t||console.log("incorrect password")};t.login=r},function(e,t,n){e.exports=n(1)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,